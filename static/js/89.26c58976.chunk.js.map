{"version":3,"file":"static/js/89.26c58976.chunk.js","mappings":"iTAEMA,EAAU,6BACVC,EAAU,mCAEHC,EAAU,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,kEACsCF,IAFrC,uBAChBG,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,qDAQVC,EAAU,mCAAG,WAAMC,GAAN,yFACDH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACgBC,EADhB,iCACgDK,EADhD,gCADC,uBAChBF,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQVG,EAAS,mCAAG,WAAMC,GAAN,yFACAL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCQ,EADD,oBACoBP,EADpB,oBADA,uBACfG,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,sDAQTK,EAAS,mCAAG,WAAMD,GAAN,yFACAL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCQ,EADD,4BAC4BP,EAD5B,oBADA,uBACfG,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,sDAQTM,EAAY,mCAAG,WAAMF,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCQ,EADD,6BAC6BP,EAD7B,2BADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,qD,4CCJzB,IA/Be,WACb,OACE,gBACEO,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,QACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,qBACjBC,OAAQ,MAXZ,UAcE,SAAC,KAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,MAAM,UACNC,eAAe,UACfC,OAAQ,KACRC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,sJC9BD,EAA0B,yBAA1B,EAAuE,mCAAvE,EAAwH,6BAAxH,EAA8J,wBAA9J,EAA+L,wB,SCkE/L,EA7De,WACb,IAAQtB,GAAYuB,EAAAA,EAAAA,MAAZvB,QACR,GAA8BwB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6FACrBF,GAAa,GADQ,mBAGO5B,EAAAA,EAAAA,IAAaF,GAHpB,gBAGXiC,EAHW,EAGXA,QACRP,EAAWO,GACXL,EAAS,MALU,kDAOnBF,EAAW,IACXE,EAAS,KAAMM,SARI,yBAUnBJ,GAAa,GAVM,6EAAH,qDAapBE,GACD,GAAE,CAAChC,IAEA6B,GACK,SAACM,EAAA,EAAD,IAGLR,GACK,uBAAIA,KAIX,iBAAKS,UAAWC,EAAhB,WACE,oCAECZ,EAAQa,QACP,eAAIF,UAAWC,EAAf,SACGZ,EAAQc,KAAI,SAAAC,GAAM,OACjB,gBACEJ,UAAWC,EADb,WAIE,eAAGD,UAAWC,EAAd,qBACWG,EAAOC,WAElB,cAAGL,UAAWC,EAAd,SACGG,EAAOE,YANLF,EAAOG,GAHG,OAerB,wGAOP,C","sources":["components/api/Api.jsx","components/loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/reviews/Reviews.module.css?9ce4","components/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '6f70f7d8034c486bbf0597ae252bbef6';\n\nexport const fetchTrend = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovie = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import { MutatingDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'fixed',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        zIndex: 9999,\n      }}\n    >\n      <MutatingDots\n        height={100}\n        width={100}\n        color=\"#0a51a1\"\n        secondaryColor=\"#0a51a1\"\n        radius={12.5}\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Reviews_wrapper__7jveo\",\"reviews-container\":\"Reviews_reviews-container__qAg++\",\"review-card\":\"Reviews_review-card__GC66m\",\"author\":\"Reviews_author__oBq9f\",\"review\":\"Reviews_review__LBsD3\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/api/Api';\nimport Loader from 'components/loader/Loader';\nimport styles from './Reviews.module.css';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getReviewsData = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await fetchReviews(movieId);\n        setReviews(results);\n        setError(null);\n      } catch (error) {\n        setReviews([]);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewsData();\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <h2>Reviews</h2>\n\n      {reviews.length ? (\n        <ul className={styles['reviews-container']}>\n          {reviews.map(review => (\n            <li\n              className={styles['review-card']}\n              key={review.id}\n            >\n              <p className={styles.author}>\n                Author: {review.author}\n              </p>\n              <p className={styles.review}>\n                {review.content}\n              </p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>\n          Sorry, but we don't have any reviews for this\n          movie ¯\\_(ツ)_/¯\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":["baseURL","API_KEY","fetchTrend","axios","data","fetchMovie","query","fetchById","movieId","fetchCast","fetchReviews","style","display","justifyContent","alignItems","position","top","bottom","left","right","backgroundColor","zIndex","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","getReviewsData","results","message","Loader","className","styles","length","map","review","author","content","id"],"sourceRoot":""}